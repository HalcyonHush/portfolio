const CACHE_NAME="offline",INITIAL_CACHE=["/","/css/site.css","/css/home.css","/js/site.js","/img/site/icon-skills.svg","/img/site/icon-projects.svg","/img/site/icon-github.svg","/img/site/icon-linkedin.svg"],TIME_LIMIT=3e3;function updateCache(e,t){caches.open(CACHE_NAME).then(n=>{n.put(e,t)})}function getNetworkResponse(e){return fetch(e).then(t=>(updateCache(e,t.clone()),t)).catch(()=>{throw new Error("Network error")})}function getAlternativeImage(e){return caches.open(CACHE_NAME).then(e=>e.matchAll()).then(t=>{const n=e.url.slice(0,e.url.lastIndexOf("-"));return t.filter(e=>e.url.includes(n)).reduce((e,t)=>{const n=e=>e.headers.get("Content-Length");return n(e)>n(t)?e:t})}).catch(()=>{throw new Error("No alternative cache entry")})}function getCacheResponse(e){return caches.match(e).then(e=>{if(e)return e;throw new Error("No cache entry")}).catch(t=>{if("image"===e.destination)return getAlternativeImage(e);throw t})}let countdown;function startCountdown(e){countdown=e;let t=setInterval(()=>{(countdown-=50)<=0&&clearInterval(t)},50)}self.addEventListener("install",e=>{e.waitUntil(caches.open(CACHE_NAME).then(e=>{e.addAll(INITIAL_CACHE)}))}),self.addEventListener("activate",e=>{e.waitUntil(clients.claim())}),self.addEventListener("fetch",e=>{"GET"===e.request.method&&e.respondWith(new Promise(t=>{"document"===e.request.destination&&startCountdown(3e3),getCacheResponse(e.request).then(n=>countdown<=0?(e.waitUntil(getNetworkResponse(e.request)),n):(setTimeout(()=>{t(n)},countdown),getNetworkResponse(e.request).catch(()=>n))).catch(()=>getNetworkResponse(e.request).catch(()=>new Response(null,{url:e.request.url,status:404,statusText:"Not found"}))).then(e=>{t(e)})}))});